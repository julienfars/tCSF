using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace Light4SightNG
{
    internal class StdStrategie
    {
        private double[] SC1_aktuellerDeltaKontrast_100 = new double[8];
        private double[] SC2_aktuellerDeltaKontrast_100 = new double[8];
        private double[] SC1_aktuellerKontrast_100      = new double[8];
        private double[] SC2_aktuellerKontrast_100      = new double[8];
        private double[] SC1_TempKontrast_100          = new double[8];
        private double[] SC2_TempKontrast_100          = new double[8];
        private double[] SC1_TempDeltaKontrast_100     = new double[8];
        private double[] SC2_TempDeltaKontrast_100     = new double[8];
 
        private int iDurchlaufSC1 = 1, iDurchlaufSC2 = 1;
        private int iSC1K100 = 0, iSC1K0 = 0, iSC2K100 = 0, iSC2K0 = 0;
        private int rot, gruen, blau, cyan;

        private bool SC1_gesehen_alt = false, SC2_gesehen_alt = false, SC1_gesehen = false, SC2_gesehen = false;
        private bool SC1_aktiv = false, SC1_7 = false, SC2_7 = false;

        private Random dRand = new Random();

        public event EventHandler<AbbruchEventArgs> abbruch;

        private int Frequenz = 20;
        
        public StdStrategie()
        {

        }

        protected virtual void OnAbbruch(AbbruchEventArgs e)
        {
            Console.Beep();
            this.abbruch(this, e);
        }

        virtual public void StartStdStrategie()
        {
            #region Kontrastwerte der aktiven Kanäle einlesen
            if (Light4SightNG.IRChannel.SignalAktiv)
            {
                SC1_aktuellerKontrast_100[0] = Light4SightNG.IRChannel.KonSC1_100;
                SC2_aktuellerKontrast_100[0] = Light4SightNG.IRChannel.KonSC2_100;
                SC1_aktuellerDeltaKontrast_100[0] = Light4SightNG.IRChannel.SC1DeltaK_100;
                SC2_aktuellerDeltaKontrast_100[0] = Light4SightNG.IRChannel.SC2DeltaK_100;
            }
            if (Light4SightNG.IGChannel.SignalAktiv)
            {
                SC1_aktuellerKontrast_100[1] = Light4SightNG.IGChannel.KonSC1_100;
                SC2_aktuellerKontrast_100[1] = Light4SightNG.IGChannel.KonSC2_100;
                SC1_aktuellerDeltaKontrast_100[1] = Light4SightNG.IGChannel.SC1DeltaK_100;
                SC2_aktuellerDeltaKontrast_100[1] = Light4SightNG.IGChannel.SC2DeltaK_100;
            }
            if (Light4SightNG.IBChannel.SignalAktiv)
            {
                SC1_aktuellerKontrast_100[2] = Light4SightNG.IBChannel.KonSC1_100;
                SC2_aktuellerKontrast_100[2] = Light4SightNG.IBChannel.KonSC2_100;
                SC1_aktuellerDeltaKontrast_100[2] = Light4SightNG.IBChannel.SC1DeltaK_100;
                SC2_aktuellerDeltaKontrast_100[2] = Light4SightNG.IBChannel.SC2DeltaK_100;
            }
            if (Light4SightNG.ICChannel.SignalAktiv)
            {
                SC1_aktuellerKontrast_100[3] = Light4SightNG.ICChannel.KonSC1_100;
                SC2_aktuellerKontrast_100[3] = Light4SightNG.ICChannel.KonSC2_100;
                SC1_aktuellerDeltaKontrast_100[3] = Light4SightNG.ICChannel.SC1DeltaK_100;
                SC2_aktuellerDeltaKontrast_100[3] = Light4SightNG.ICChannel.SC2DeltaK_100;
            }
            if (Light4SightNG.ORChannel.SignalAktiv)
            {
                SC1_aktuellerKontrast_100[4] = Light4SightNG.ORChannel.KonSC1_100;
                SC2_aktuellerKontrast_100[4] = Light4SightNG.ORChannel.KonSC2_100;
                SC1_aktuellerDeltaKontrast_100[4] = Light4SightNG.ORChannel.SC1DeltaK_100;
                SC2_aktuellerDeltaKontrast_100[4] = Light4SightNG.ORChannel.SC2DeltaK_100;
            }
            if (Light4SightNG.OGChannel.SignalAktiv)
            {
                SC1_aktuellerKontrast_100[5] = Light4SightNG.OGChannel.KonSC1_100;
                SC2_aktuellerKontrast_100[5] = Light4SightNG.OGChannel.KonSC2_100;
                SC1_aktuellerDeltaKontrast_100[5] = Light4SightNG.OGChannel.SC1DeltaK_100;
                SC2_aktuellerDeltaKontrast_100[5] = Light4SightNG.OGChannel.SC2DeltaK_100;
            }
            if (Light4SightNG.OBChannel.SignalAktiv)
            {
                SC1_aktuellerKontrast_100[6] = Light4SightNG.OBChannel.KonSC1_100;
                SC2_aktuellerKontrast_100[6] = Light4SightNG.OBChannel.KonSC2_100;
                SC1_aktuellerDeltaKontrast_100[6] = Light4SightNG.OBChannel.SC1DeltaK_100;
                SC2_aktuellerDeltaKontrast_100[6] = Light4SightNG.OBChannel.SC2DeltaK_100;
            }
            if (Light4SightNG.OCChannel.SignalAktiv)
            {
                SC1_aktuellerKontrast_100[7] = Light4SightNG.OCChannel.KonSC1_100;
                SC2_aktuellerKontrast_100[7] = Light4SightNG.OCChannel.KonSC2_100;
                SC1_aktuellerDeltaKontrast_100[7] = Light4SightNG.OCChannel.SC1DeltaK_100;
                SC2_aktuellerDeltaKontrast_100[7] = Light4SightNG.OCChannel.SC2DeltaK_100;
            }
            #endregion
            prepareLogFile();
            Randomisierung();
        }

        public void _setNewFrequency(int f)
        {
            Frequenz = f;
            _setNewFrequency();
        }

        private void _setNewFrequency()
        {
            Light4SightNG.IRChannel.Frequenz = Frequenz;
            Light4SightNG.IGChannel.Frequenz = Frequenz;
            Light4SightNG.IBChannel.Frequenz = Frequenz;
            Light4SightNG.ICChannel.Frequenz = Frequenz;
            Light4SightNG.ORChannel.Frequenz = Frequenz;
            Light4SightNG.OGChannel.Frequenz = Frequenz;
            Light4SightNG.OBChannel.Frequenz = Frequenz;
            Light4SightNG.OCChannel.Frequenz = Frequenz;
        }


        private void StaircaseDown()//sc1 LEDGruppe = innen || aussen
        {
            if (iSC1K0 < 3 && iSC1K100 < 3)
            {
                #region Innere LEDs oder alle
                //LED Bereich innen
                if (clGlobals.LEDBereich == "innen" || clGlobals.LEDBereich == "alle")
                {
                    #region Ausnahme für ersten Durchlauf
                    if (this.iDurchlaufSC1 == 1)
                    {
                        Light4SightNG.IRChannel.Kontrast_100 = SC1_aktuellerKontrast_100[0];
                        Light4SightNG.IGChannel.Kontrast_100 = SC1_aktuellerKontrast_100[1];
                        Light4SightNG.IBChannel.Kontrast_100 = SC1_aktuellerKontrast_100[2];
                        Light4SightNG.ICChannel.Kontrast_100 = SC1_aktuellerKontrast_100[3];
                    }
                    #endregion

                    #region Kontrastwert überprüfen und neuen Kontrast einstellen
                    else
                    {
                        #region Proband hat ein Flackern gesehen
                        //Flackern wurde gesehen

                        if (this.SC1_gesehen == true)
                        {
                            #region Proband hat beim Mal davor auch ein Flackern gesehen
                            //Flackern wurde beim letzten Mal gesehen (ab 2tem Durchlauf)
                            if ((this.SC1_gesehen_alt == true) || (this.iDurchlaufSC1 == 2))
                            {
                                SetNewKontrastSC1("innen", true, true);
                            }
                            #endregion

                            #region Proband hat beim letzten Mal kein Flackern gesehen
                            //Flackern wurde beim letzten Mal NICHT gesehen
                            else
                            {
                                SetNewKontrastSC1("innen", true, false);
                            }
                            #endregion
                        }
                        #endregion

                        #region Proband hat KEIN Flackern gesehen
                        else
                        {
                            #region Proband hat beim Mal davor auch KEIN Flackern gesehen
                            //Flackern wurde beim letzten Mal NICHT gesehen (ab 2tem Durchlauf)
                            if ((this.SC1_gesehen_alt == false)||(iDurchlaufSC1 == 2))
                            {
                                SetNewKontrastSC1("innen", false, false);
                            }
                            #endregion

                            #region Proband hat beim letzten Mal Flackern gesehen
                            //Flackern wurde beim letzten Mal gesehen
                            else
                            {
                                SetNewKontrastSC1("innen", false, true);
                            }
                            #endregion
                        }
                        #endregion
                    }
                    #endregion
                }
                #endregion

                #region Äußere LEDs oder alle
                //LED Bereich aussen
                if (clGlobals.LEDBereich == "aussen" || clGlobals.LEDBereich == "alle")
                {
                    #region Ausnahme für ersten Durchlauf
                    if (iDurchlaufSC1 == 1)
                    {
                        Light4SightNG.ORChannel.Kontrast_100 = SC1_aktuellerKontrast_100[4];
                        Light4SightNG.OGChannel.Kontrast_100 = SC1_aktuellerKontrast_100[5];
                        Light4SightNG.OBChannel.Kontrast_100 = SC1_aktuellerKontrast_100[6];
                        Light4SightNG.OCChannel.Kontrast_100 = SC1_aktuellerKontrast_100[7];
                    }
                    #endregion

                    #region Kontrastwert überprüfen und neuen Kontrast einstellen
                    else
                    {
                        #region Proband hat ein Flackern gesehen
                        //Flackern wurde gesehen

                        if (this.SC1_gesehen == true)
                        {
                            #region Proband hat beim Mal davor auch ein Flackern gesehen
                            //Flackern wurde beim letzten Mal gesehen (ab 2tem Durchlauf)
                            if (this.SC1_gesehen_alt == true || (this.iDurchlaufSC1 == 2))
                            {
                                SetNewKontrastSC1("aussen", true, true);
                            }
                            #endregion

                            #region Proband hat beim letzten Mal kein Flackern gesehen
                            //Flackern wurde beim letzten Mal NICHT gesehen
                            else
                            {
                                SetNewKontrastSC1("aussen", true, false);
                            }
                            #endregion
                        }
                        #endregion

                        #region Proband hat KEIN Flackern gesehen
                        else
                        {
                            #region Proband hat beim Mal davor auch KEIN Flackern gesehen
                                                        //Flackern wurde beim letzten Mal NICHT gesehen (ab 2tem Durchlauf)
                            if (this.SC1_gesehen_alt == false || (this.iDurchlaufSC1 == 2))
                            {
                                SetNewKontrastSC1("aussen", false, false);
                                #region alte programmierung für aussen
                                /*
                                //neuen Kontrastwert berechnen
                                SC1_aktuellerKontrast_100[4] = SC1_aktuellerKontrast_100[4] + SC1_aktuellerDeltaKontrast_100[4];
                                SC1_aktuellerKontrast_100[5] = SC1_aktuellerKontrast_100[5] + SC1_aktuellerDeltaKontrast_100[5];
                                SC1_aktuellerKontrast_100[6] = SC1_aktuellerKontrast_100[6] + SC1_aktuellerDeltaKontrast_100[6];
                                SC1_aktuellerKontrast_100[7] = SC1_aktuellerKontrast_100[7] + SC1_aktuellerDeltaKontrast_100[7];

                                //neuer Kontrastwert >= 0 also gültig
                                if (((SC1_aktuellerKontrast_100[4] >= 0) && (SC1_aktuellerKontrast_100[4] <= 100))&&((SC1_aktuellerKontrast_100[5] >= 0) && (SC1_aktuellerKontrast_100[5] <= 100))&&((SC1_aktuellerKontrast_100[6] >= 0) && (SC1_aktuellerKontrast_100[6] <= 100))&&((SC1_aktuellerKontrast_100[7] >= 0) && (SC1_aktuellerKontrast_100[7] <= 100)))
                                {
                                    //neuen Kontrast für die Signalgenerierung zuweisen
                                    Light4SightNG.ORChannel.Kontrast_100 = SC1_aktuellerKontrast_100[4];
                                    Light4SightNG.OGChannel.Kontrast_100 = SC1_aktuellerKontrast_100[5];
                                    Light4SightNG.OBChannel.Kontrast_100 = SC1_aktuellerKontrast_100[6];
                                    Light4SightNG.OCChannel.Kontrast_100 = SC1_aktuellerKontrast_100[7];
                                }
                                
                                if ((SC1_aktuellerDeltaKontrast_100[4] < (SC1_aktuellerKontrast_100[4] / 7)) || (SC1_aktuellerDeltaKontrast_100[5] < (SC1_aktuellerKontrast_100[5] / 7)) || (SC1_aktuellerDeltaKontrast_100[6] < (SC1_aktuellerKontrast_100[6] / 7)) || (SC1_aktuellerDeltaKontrast_100[7] < (SC1_aktuellerKontrast_100[7] / 7)))
                                {
                                    //Abbrechen("Staircase 1: Delta Kontrast kleiner K/7 erreicht");
                                    Logmessage("Down: Schwelle erreicht! " + SC1_aktuellerKontrast_100[0] + ";" + SC1_aktuellerKontrast_100[1] + ";" + SC1_aktuellerKontrast_100[2] + ";" + SC1_aktuellerKontrast_100[3] + ";" + SC1_aktuellerKontrast_100[4] + ";" + SC1_aktuellerKontrast_100[5] + ";" + SC1_aktuellerKontrast_100[6] + ";" + SC1_aktuellerKontrast_100[7]);
                                    this.OnAbbruch(new AbbruchEventArgs(""));
                                }
                                //neuer Kontrastwert < 0 also ungültig
                                else
                                {
                                    //neuen Kontrastwert auf 0 setzen und zuweisen
                                    SC1_aktuellerKontrast_100[4] = 100;
                                    Light4SightNG.ORChannel.Kontrast_100 = SC1_aktuellerKontrast_100[4];
                                    SC1_aktuellerKontrast_100[5] = 100;
                                    Light4SightNG.OGChannel.Kontrast_100 = SC1_aktuellerKontrast_100[5];
                                    SC1_aktuellerKontrast_100[6] = 100;
                                    Light4SightNG.OBChannel.Kontrast_100 = SC1_aktuellerKontrast_100[6];
                                    SC1_aktuellerKontrast_100[7] = 100;
                                    Light4SightNG.OCChannel.Kontrast_100 = SC1_aktuellerKontrast_100[7];
                                    //Zähler für Abbruch hochzählen
                                    iSC1K100++;
                                }*/
                                #endregion
                            }
                            #endregion

                            #region Proband hat beim letzten Mal Flackern gesehen
                            //Flackern wurde beim letzten Mal gesehen
                            else
                            {
                                SetNewKontrastSC1("aussen", false, true);
                                #region alte programmierung für aussen
                                /*
                                //neuen Kontrastwert berechnen
                                SC1_aktuellerDeltaKontrast_100[4] = SC1_aktuellerDeltaKontrast_100[4] / 2;
                                SC1_aktuellerKontrast_100[4] = SC1_aktuellerKontrast_100[4] + SC1_aktuellerDeltaKontrast_100[4];
                                SC1_aktuellerDeltaKontrast_100[5] = SC1_aktuellerDeltaKontrast_100[5] / 2;
                                SC1_aktuellerKontrast_100[5] = SC1_aktuellerKontrast_100[5] + SC1_aktuellerDeltaKontrast_100[5];
                                SC1_aktuellerDeltaKontrast_100[6] = SC1_aktuellerDeltaKontrast_100[6] / 2;
                                SC1_aktuellerKontrast_100[6] = SC1_aktuellerKontrast_100[6] + SC1_aktuellerDeltaKontrast_100[6];
                                SC1_aktuellerDeltaKontrast_100[7] = SC1_aktuellerDeltaKontrast_100[7] / 2;
                                SC1_aktuellerKontrast_100[7] = SC1_aktuellerKontrast_100[7] + SC1_aktuellerDeltaKontrast_100[7];

                                //Ist das Abbruchkriterium von DeltaK < K/7 erreicht, dann abbrechen
                                if ((SC1_aktuellerDeltaKontrast_100[4] < (SC1_aktuellerKontrast_100[4] / 7))||(SC1_aktuellerDeltaKontrast_100[5] < (SC1_aktuellerKontrast_100[5] / 7))||(SC1_aktuellerDeltaKontrast_100[6] < (SC1_aktuellerKontrast_100[6] / 7))||(SC1_aktuellerDeltaKontrast_100[7] < (SC1_aktuellerKontrast_100[7] / 7)))
                                {
                                    //Abbrechen("Staircase 1: Delta Kontrast kleiner K/7 erreicht");
                                    Logmessage("Down: Schwelle erreicht! " + SC1_aktuellerKontrast_100[0] + ";" + SC1_aktuellerKontrast_100[1] + ";" + SC1_aktuellerKontrast_100[2] + ";" + SC1_aktuellerKontrast_100[3] + ";" + SC1_aktuellerKontrast_100[4] + ";" + SC1_aktuellerKontrast_100[5] + ";" + SC1_aktuellerKontrast_100[6] + ";" + SC1_aktuellerKontrast_100[7]);
                                    this.OnAbbruch(new AbbruchEventArgs(""));
                                }
                                //ansonsten Kontrastwerte einstellen
                                else
                                {
                                    //neuer Kontrastwert <= 100 also gültig
                                    if (((SC1_aktuellerKontrast_100[4] >= 0) && (SC1_aktuellerKontrast_100[4] <= 100))&&((SC1_aktuellerKontrast_100[5] >= 0) && (SC1_aktuellerKontrast_100[5] <= 100))&&((SC1_aktuellerKontrast_100[6] >= 0) && (SC1_aktuellerKontrast_100[6] <= 100))&&((SC1_aktuellerKontrast_100[7] >= 0) && (SC1_aktuellerKontrast_100[7] <= 100)))
                                    {
                                        //neuen Kontrast für die Signalgenerierung zuweisen
                                        Light4SightNG.ORChannel.Kontrast_100 = SC1_aktuellerKontrast_100[4];
                                        Light4SightNG.OGChannel.Kontrast_100 = SC1_aktuellerKontrast_100[5];
                                        Light4SightNG.OBChannel.Kontrast_100 = SC1_aktuellerKontrast_100[6];
                                        Light4SightNG.OCChannel.Kontrast_100 = SC1_aktuellerKontrast_100[7];
                                    }
                                    //neuer Kontrastwert > 100 also ungültig
                                    else
                                    {
                                        //neuen Kontrastwert auf 0 setzen und zuweisen
                                        SC1_aktuellerKontrast_100[4] = 100;
                                        Light4SightNG.ORChannel.Kontrast_100 = SC1_aktuellerKontrast_100[4];
                                        SC1_aktuellerKontrast_100[5] = 100;
                                        Light4SightNG.OGChannel.Kontrast_100 = SC1_aktuellerKontrast_100[5];
                                        SC1_aktuellerKontrast_100[6] = 100;
                                        Light4SightNG.OBChannel.Kontrast_100 = SC1_aktuellerKontrast_100[6];
                                        SC1_aktuellerKontrast_100[7] = 100;
                                        Light4SightNG.OCChannel.Kontrast_100 = SC1_aktuellerKontrast_100[7];
                                        //Zähler für Abbruch hochzählen
                                        iSC1K100++;
                                        iSC1K0 = 0;
                                    }
                                }*/
                                #endregion
                            }
                            #endregion
                        }
                        #endregion
                    }
                    #endregion
                }
 
                if (SC1_7 == false)
                {
                   SC1_gesehen_alt = SC1_gesehen;
                  SignalWiedergeben();
                  iDurchlaufSC1++;
                }
                else Randomisierung();
               
            }
            else
            {
                //Abbrechen(stmp);
                //**_**
                this.OnAbbruch(new AbbruchEventArgs(""));
            }
                #endregion

        }

        private void StaircaseUp()//sc2 LEDGruppe = innen || aussen
        {
            if (iSC2K0 < 3 && iSC2K100 < 3)
            {
                #region Innere LEDs oder alle
                //LED Bereich innen
                if (clGlobals.LEDBereich == "innen" || clGlobals.LEDBereich == "alle")
                {
                    #region Ausnahme für ersten Durchlauf
                    if (this.iDurchlaufSC2 == 1)
                    {
                        Light4SightNG.IRChannel.Kontrast_100 = SC2_aktuellerKontrast_100[0];
                        Light4SightNG.IGChannel.Kontrast_100 = SC2_aktuellerKontrast_100[1];
                        Light4SightNG.IBChannel.Kontrast_100 = SC2_aktuellerKontrast_100[2];
                        Light4SightNG.ICChannel.Kontrast_100 = SC2_aktuellerKontrast_100[3];
                    }
                    #endregion

                    #region Kontrastwert überprüfen und neuen Kontrast einstellen
                    else
                    {
                        #region Proband hat ein Flackern gesehen
                        //Flackern wurde gesehen

                        if (this.SC2_gesehen == true)
                        {
                            #region Proband hat beim Mal davor auch ein Flackern gesehen
                            //Flackern wurde beim letzten Mal gesehen (ab 2tem Durchlauf)
                            if ((this.SC2_gesehen_alt == true) || (this.iDurchlaufSC2 == 2))
                            {
                                SetNewKontrastSC2("innen", true, true);
                            }
                            #endregion

                            #region Proband hat beim letzten Mal kein Flackern gesehen
                            //Flackern wurde beim letzten Mal NICHT gesehen
                            else
                            {
                                SetNewKontrastSC2("innen", true, false);
                            }
                            #endregion
                        }
                        #endregion

                        #region Proband hat KEIN Flackern gesehen
                        else
                        {
                            #region Proband hat beim Mal davor auch KEIN Flackern gesehen
                            //Flackern wurde beim letzten Mal NICHT gesehen (ab 2tem Durchlauf)
                            if ((this.SC2_gesehen_alt == false) || (iDurchlaufSC2 == 2))
                            {
                                SetNewKontrastSC2("innen", false, false);
                            }
                            #endregion

                            #region Proband hat beim letzten Mal Flackern gesehen
                            //Flackern wurde beim letzten Mal gesehen
                            else
                            {
                                SetNewKontrastSC2("innen", false, true);
                            }
                            #endregion
                        }
                        #endregion
                    }
                    #endregion
                }
                #endregion

                #region Äußere LEDs oder alle
                //LED Bereich aussen
                if (clGlobals.LEDBereich == "aussen" || clGlobals.LEDBereich == "alle")
                {
                    #region Ausnahme für ersten Durchlauf
                    if (iDurchlaufSC2 == 1)
                    {
                        Light4SightNG.ORChannel.Kontrast_100 = SC2_aktuellerKontrast_100[4];
                        Light4SightNG.OGChannel.Kontrast_100 = SC2_aktuellerKontrast_100[5];
                        Light4SightNG.OBChannel.Kontrast_100 = SC2_aktuellerKontrast_100[6];
                        Light4SightNG.OCChannel.Kontrast_100 = SC2_aktuellerKontrast_100[7];
                    }
                    #endregion

                    #region Kontrastwert überprüfen und neuen Kontrast einstellen
                    else
                    {
                        #region Proband hat ein Flackern gesehen
                        //Flackern wurde gesehen

                        if (this.SC2_gesehen == true)
                        {
                            #region Proband hat beim Mal davor auch ein Flackern gesehen
                            //Flackern wurde beim letzten Mal gesehen (ab 2tem Durchlauf)
                            if (this.SC2_gesehen_alt == true)
                            {
                                SetNewKontrastSC2("aussen", true, true);
                            }
                            #endregion

                            #region Proband hat beim letzten Mal kein Flackern gesehen
                            //Flackern wurde beim letzten Mal NICHT gesehen
                            else
                            {
                                SetNewKontrastSC2("aussen", true, false);
                            }
                            #endregion
                        }
                        #endregion

                        #region Proband hat KEIN Flackern gesehen
                        else
                        {
                            #region Proband hat beim Mal davor auch KEIN Flackern gesehen
                            //Flackern wurde beim letzten Mal NICHT gesehen (ab 2tem Durchlauf)
                            if (this.SC2_gesehen_alt == false)
                            {
                                SetNewKontrastSC2("aussen", false, false);
                            }
                            #endregion

                            #region Proband hat beim letzten Mal Flackern gesehen
                            //Flackern wurde beim letzten Mal gesehen
                            else
                            {
                                SetNewKontrastSC2("aussen", false, true);
                            }
                            #endregion
                        }
                        #endregion
                    }
                    #endregion
                }
 
                if (SC2_7 == false)
                {
                    SC2_gesehen_alt = SC2_gesehen;
                    SignalWiedergeben();
                    iDurchlaufSC2++;
                }
                else Randomisierung();
               
            }
            else
            {
                this.OnAbbruch(new AbbruchEventArgs(""));
            }
                #endregion
        }

        private void SetNewKontrastSC1(string LED_Gruppe, bool gesehen, bool davor_gesehen)
        {
            
            bool bk7 = false;
            string logmessage = "Down: Schwelle erreicht!;;";

            if (LED_Gruppe == "innen")
            #region unterscheidung welche led_gruppe und entsprechnde index zuweisung
            {
                rot = 0;
                gruen = 1;
                blau = 2;
                cyan = 3;
            }
            else
            {
                rot = 4;
                gruen = 5;
                blau = 6;
                cyan = 7;
            }
            #endregion

            if (gesehen == false)
            #region
            {
                if (davor_gesehen == false)
                #region
                {
                    if (!_SC1_checkIfAnyWouldBeLargerThen100ff(LED_Gruppe))
                    #region
                    {
                        if ((Light4SightNG.IRChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.ORChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC1_aktuellerKontrast_100[rot] = SC1_aktuellerKontrast_100[rot] + SC1_aktuellerDeltaKontrast_100[rot];

                            //if (CheckK7("down", rot)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IRChannel.Kontrast_100 = SC1_aktuellerKontrast_100[rot];
                            else
                                Light4SightNG.ORChannel.Kontrast_100 = SC1_aktuellerKontrast_100[rot];
                        }
                        logmessage = logmessage + SC1_aktuellerKontrast_100[rot] + ";";
                        #endregion

                        if ((Light4SightNG.IGChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OGChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC1_aktuellerKontrast_100[gruen] = SC1_aktuellerKontrast_100[gruen] + SC1_aktuellerDeltaKontrast_100[gruen];

                            //if (CheckK7("down", gruen)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IGChannel.Kontrast_100 = SC1_aktuellerKontrast_100[gruen];
                            else
                                Light4SightNG.OGChannel.Kontrast_100 = SC1_aktuellerKontrast_100[gruen];
                        }
                        logmessage = logmessage + SC1_aktuellerKontrast_100[gruen] + ";";
                        #endregion

                        if ((Light4SightNG.IBChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OBChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC1_aktuellerKontrast_100[blau] = SC1_aktuellerKontrast_100[blau] + SC1_aktuellerDeltaKontrast_100[blau];

                            //if (CheckK7("down", blau)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IBChannel.Kontrast_100 = SC1_aktuellerKontrast_100[blau];
                            else
                                Light4SightNG.OBChannel.Kontrast_100 = SC1_aktuellerKontrast_100[blau];
                        }
                        logmessage = logmessage + SC1_aktuellerKontrast_100[blau] + ";";
                        #endregion

                        if ((Light4SightNG.ICChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OCChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC1_aktuellerKontrast_100[cyan] = SC1_aktuellerKontrast_100[cyan] + SC1_aktuellerDeltaKontrast_100[cyan];

                            //if (CheckK7("down", cyan)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.ICChannel.Kontrast_100 = SC1_aktuellerKontrast_100[cyan];
                            else
                                Light4SightNG.OCChannel.Kontrast_100 = SC1_aktuellerKontrast_100[cyan];
                        }
                        logmessage = logmessage + SC1_aktuellerKontrast_100[cyan] + ";";
                        #endregion
                    }
                    #endregion
                    else
                    {
                        //logmessage = SC1_aktuellerKontrast_100[rot] + ";" + SC1_aktuellerKontrast_100[gruen] + ";" + SC1_aktuellerKontrast_100[blau] + ";" + SC1_aktuellerKontrast_100[cyan] + ";";
                        _setCurrentContrastSC1(LED_Gruppe);
                        iSC1K100++;
                        Logmessage("Versuch Überschreitung: " + Convert.ToString(iSC1K100), false);
                    }
                }
                #endregion
                else //davor_gesehen == true
                #region
                {
                    if (!_SC1_checkIfAnyWouldBeLargerThen100ft(LED_Gruppe))
                    #region
                    {
                        //neuen Kontrastwert berechnen
                        if ((Light4SightNG.IRChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.ORChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC1_aktuellerDeltaKontrast_100[rot] = SC1_aktuellerDeltaKontrast_100[rot] / 2;
                            SC1_aktuellerKontrast_100[rot] = SC1_aktuellerKontrast_100[rot] + SC1_aktuellerDeltaKontrast_100[rot];

                            if (CheckK7("down", rot)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IRChannel.Kontrast_100 = SC1_aktuellerKontrast_100[rot];
                            else
                                Light4SightNG.ORChannel.Kontrast_100 = SC1_aktuellerKontrast_100[rot];
                        }
                        logmessage = logmessage + SC1_aktuellerKontrast_100[rot] + ";";
                        #endregion

                        if ((Light4SightNG.IGChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OGChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC1_aktuellerDeltaKontrast_100[gruen] = SC1_aktuellerDeltaKontrast_100[gruen] / 2;
                            SC1_aktuellerKontrast_100[gruen] = SC1_aktuellerKontrast_100[gruen] + SC1_aktuellerDeltaKontrast_100[gruen];

                            if (CheckK7("down", gruen)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IGChannel.Kontrast_100 = SC1_aktuellerKontrast_100[gruen];
                            else
                                Light4SightNG.OGChannel.Kontrast_100 = SC1_aktuellerKontrast_100[gruen];
                        }
                        logmessage = logmessage + SC1_aktuellerKontrast_100[gruen] + ";";
                        #endregion

                        if ((Light4SightNG.IBChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OBChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC1_aktuellerDeltaKontrast_100[blau] = SC1_aktuellerDeltaKontrast_100[blau] / 2;
                            SC1_aktuellerKontrast_100[blau] = SC1_aktuellerKontrast_100[blau] + SC1_aktuellerDeltaKontrast_100[blau];

                            if (CheckK7("down", blau)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IBChannel.Kontrast_100 = SC1_aktuellerKontrast_100[blau];
                            else
                                Light4SightNG.OBChannel.Kontrast_100 = SC1_aktuellerKontrast_100[blau];
                        }
                        logmessage = logmessage + SC1_aktuellerKontrast_100[blau] + ";";
                        #endregion

                        if ((Light4SightNG.ICChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OCChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC1_aktuellerDeltaKontrast_100[cyan] = SC1_aktuellerDeltaKontrast_100[cyan] / 2;
                            SC1_aktuellerKontrast_100[cyan] = SC1_aktuellerKontrast_100[cyan] + SC1_aktuellerDeltaKontrast_100[cyan];

                            if (CheckK7("down", cyan)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.ICChannel.Kontrast_100 = SC1_aktuellerKontrast_100[cyan];
                            else
                                Light4SightNG.OCChannel.Kontrast_100 = SC1_aktuellerKontrast_100[cyan];
                        }
                        logmessage = logmessage + SC1_aktuellerKontrast_100[cyan] + ";";
                        #endregion
                    }
                    #endregion
                    else
                    {
                        //logmessage = SC1_aktuellerKontrast_100[rot] + ";" + SC1_aktuellerKontrast_100[gruen] + ";" + SC1_aktuellerKontrast_100[blau] + ";" + SC1_aktuellerKontrast_100[cyan] + ";";
                        _setCurrentContrastSC1(LED_Gruppe);
                        iSC1K100++;
                        iSC1K0 = 0;
                        Logmessage("Versuch Überschreitung: " + Convert.ToString(iSC1K100), false);
                    }
                    
                }
                #endregion
                
            }
            #endregion
            else //gesehen == true
            #region
            {
                if (davor_gesehen == true)
                #region
                {
                    if (!_SC1_checkIfAnyWouldBeSmallerThen0tt(LED_Gruppe))
                    #region
                    {
                        if ((Light4SightNG.IRChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.ORChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC1_aktuellerKontrast_100[rot] = SC1_aktuellerKontrast_100[rot] - SC1_aktuellerDeltaKontrast_100[rot];

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IRChannel.Kontrast_100 = SC1_aktuellerKontrast_100[rot];
                            else
                                Light4SightNG.ORChannel.Kontrast_100 = SC1_aktuellerKontrast_100[rot];
                        }
                        #endregion

                        if ((Light4SightNG.IGChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OGChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC1_aktuellerKontrast_100[gruen] = SC1_aktuellerKontrast_100[gruen] - SC1_aktuellerDeltaKontrast_100[gruen];

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IGChannel.Kontrast_100 = SC1_aktuellerKontrast_100[gruen];
                            else
                                Light4SightNG.OGChannel.Kontrast_100 = SC1_aktuellerKontrast_100[gruen];
                        }
                        #endregion

                        if ((Light4SightNG.IBChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OBChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC1_aktuellerKontrast_100[blau] = SC1_aktuellerKontrast_100[blau] - SC1_aktuellerDeltaKontrast_100[blau];

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IBChannel.Kontrast_100 = SC1_aktuellerKontrast_100[blau];
                            else
                                Light4SightNG.OBChannel.Kontrast_100 = SC1_aktuellerKontrast_100[blau];
                        }
                        #endregion

                        if ((Light4SightNG.ICChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OCChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC1_aktuellerKontrast_100[cyan] = SC1_aktuellerKontrast_100[cyan] - SC1_aktuellerDeltaKontrast_100[cyan];

                            if (LED_Gruppe == "innen")
                                Light4SightNG.ICChannel.Kontrast_100 = SC1_aktuellerKontrast_100[cyan];
                            else
                                Light4SightNG.OCChannel.Kontrast_100 = SC1_aktuellerKontrast_100[cyan];
                        }
                        #endregion
                    }
                    #endregion
                    else
                    {
                        //logmessage = SC1_aktuellerKontrast_100[rot] + ";" + SC1_aktuellerKontrast_100[gruen] + ";" + SC1_aktuellerKontrast_100[blau] + ";" + SC1_aktuellerKontrast_100[cyan] + ";";
                        _setCurrentContrastSC1(LED_Gruppe);
                        iSC1K0++;
                        Logmessage("Versuch Unterschreitung: " + Convert.ToString(iSC1K0), false);
                    }
                }
                #endregion
                else //davor_gesehen == false
                #region
                {
                    if (!_SC1_checkIfAnyWouldBeSmallerThen0tf(LED_Gruppe))
                    #region
                    {
                        if ((Light4SightNG.IRChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.ORChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC1_aktuellerDeltaKontrast_100[rot] = SC1_aktuellerDeltaKontrast_100[rot] / 2;
                            SC1_aktuellerKontrast_100[rot] = SC1_aktuellerKontrast_100[rot] - SC1_aktuellerDeltaKontrast_100[rot];

                            if (CheckK7("down", rot)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IRChannel.Kontrast_100 = SC1_aktuellerKontrast_100[rot];
                            else
                                Light4SightNG.ORChannel.Kontrast_100 = SC1_aktuellerKontrast_100[rot];
                        }
                        logmessage = logmessage + SC1_aktuellerKontrast_100[rot] + ";";
                        #endregion

                        if ((Light4SightNG.IGChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OGChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC1_aktuellerDeltaKontrast_100[gruen] = SC1_aktuellerDeltaKontrast_100[gruen] / 2;
                            SC1_aktuellerKontrast_100[gruen] = SC1_aktuellerKontrast_100[gruen] - SC1_aktuellerDeltaKontrast_100[gruen];

                            if (CheckK7("down", gruen)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IGChannel.Kontrast_100 = SC1_aktuellerKontrast_100[gruen];
                            else
                                Light4SightNG.OGChannel.Kontrast_100 = SC1_aktuellerKontrast_100[gruen];
                        }
                        logmessage = logmessage + SC1_aktuellerKontrast_100[gruen] + ";";
                        #endregion

                        if ((Light4SightNG.IBChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OBChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC1_aktuellerDeltaKontrast_100[blau] = SC1_aktuellerDeltaKontrast_100[blau] / 2;
                            SC1_aktuellerKontrast_100[blau] = SC1_aktuellerKontrast_100[blau] - SC1_aktuellerDeltaKontrast_100[blau];

                            if (CheckK7("down", blau)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IBChannel.Kontrast_100 = SC1_aktuellerKontrast_100[blau];
                            else
                                Light4SightNG.OBChannel.Kontrast_100 = SC1_aktuellerKontrast_100[blau];
                        }
                        logmessage = logmessage + SC1_aktuellerKontrast_100[blau] + ";";
                        #endregion

                        if ((Light4SightNG.ICChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OCChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC1_aktuellerDeltaKontrast_100[cyan] = SC1_aktuellerDeltaKontrast_100[cyan] / 2;
                            SC1_aktuellerKontrast_100[cyan] = SC1_aktuellerKontrast_100[cyan] - SC1_aktuellerDeltaKontrast_100[cyan];

                            if (CheckK7("down", cyan)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.ICChannel.Kontrast_100 = SC1_aktuellerKontrast_100[cyan];
                            else
                                Light4SightNG.OCChannel.Kontrast_100 = SC1_aktuellerKontrast_100[cyan];
                        }
                        logmessage = logmessage + SC1_aktuellerKontrast_100[cyan] + ";";
                        #endregion
                    }
                    #endregion
                    else
                    {
                        //logmessage = SC1_aktuellerKontrast_100[rot] + ";" + SC1_aktuellerKontrast_100[gruen] + ";" + SC1_aktuellerKontrast_100[blau] + ";" + SC1_aktuellerKontrast_100[cyan] + ";";
                        _setCurrentContrastSC1(LED_Gruppe);
                        iSC1K0++;
                        iSC1K100 = 0;
                        Logmessage("Versuch Unterschreitung: " + Convert.ToString(iSC1K0), false);
                    }

                }
                #endregion
            }
            #endregion
            if (bk7) Logmessage(logmessage, false);
            //if (SC1_7 == true && SC2_7 == true)
            //{
            //    this.OnAbbruch(new AbbruchEventArgs(""));
            //}
        }

        private void _setCurrentContrastSC1(string LED_Gruppe)
        {
            if (LED_Gruppe == "innen")
            {
                Light4SightNG.IRChannel.Kontrast_100 = SC1_aktuellerKontrast_100[rot];
                Light4SightNG.IGChannel.Kontrast_100 = SC1_aktuellerKontrast_100[gruen];
                Light4SightNG.IBChannel.Kontrast_100 = SC1_aktuellerKontrast_100[blau];
                Light4SightNG.ICChannel.Kontrast_100 = SC1_aktuellerKontrast_100[cyan];
            }
            else
            {
                Light4SightNG.ORChannel.Kontrast_100 = SC1_aktuellerKontrast_100[rot];
                Light4SightNG.OGChannel.Kontrast_100 = SC1_aktuellerKontrast_100[gruen];
                Light4SightNG.OBChannel.Kontrast_100 = SC1_aktuellerKontrast_100[blau];
                Light4SightNG.OCChannel.Kontrast_100 = SC1_aktuellerKontrast_100[cyan];
            }
        }

        private void _setCurrentContrastSC2(string LED_Gruppe)
        {
            if (LED_Gruppe == "innen")
            {
                Light4SightNG.IRChannel.Kontrast_100 = SC2_aktuellerKontrast_100[rot];
                Light4SightNG.IGChannel.Kontrast_100 = SC2_aktuellerKontrast_100[gruen];
                Light4SightNG.IBChannel.Kontrast_100 = SC2_aktuellerKontrast_100[blau];
                Light4SightNG.ICChannel.Kontrast_100 = SC2_aktuellerKontrast_100[cyan];
            }
            else
            {
                Light4SightNG.ORChannel.Kontrast_100 = SC2_aktuellerKontrast_100[rot];
                Light4SightNG.OGChannel.Kontrast_100 = SC2_aktuellerKontrast_100[gruen];
                Light4SightNG.OBChannel.Kontrast_100 = SC2_aktuellerKontrast_100[blau];
                Light4SightNG.OCChannel.Kontrast_100 = SC2_aktuellerKontrast_100[cyan];
            }
        }

        private bool _SC1_checkIfAnyWouldBeLargerThen100ff(string LED_Gruppe)
        {
            if ((Light4SightNG.IRChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.ORChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC1_TempKontrast_100[rot] = SC1_aktuellerKontrast_100[rot] + SC1_aktuellerDeltaKontrast_100[rot];
                if (SC1_TempKontrast_100[rot] > 100) return true;
            }

            if ((Light4SightNG.IGChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OGChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC1_TempKontrast_100[gruen] = SC1_aktuellerKontrast_100[gruen] + SC1_aktuellerDeltaKontrast_100[gruen];
                if (SC1_TempKontrast_100[gruen] > 100) return true;
            }

            if ((Light4SightNG.IBChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OBChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC1_TempKontrast_100[blau] = SC1_aktuellerKontrast_100[blau] + SC1_aktuellerDeltaKontrast_100[blau];
                if (SC1_TempKontrast_100[blau] > 100) return true;
            }

            if ((Light4SightNG.ICChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OCChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC1_TempKontrast_100[cyan] = SC1_aktuellerKontrast_100[cyan] + SC1_aktuellerDeltaKontrast_100[cyan];
                if (SC1_TempKontrast_100[cyan] > 100) return true;
            }

            return false;
        }

        private bool _SC1_checkIfAnyWouldBeLargerThen100ft(string LED_Gruppe)
        {
            if ((Light4SightNG.IRChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.ORChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC1_TempDeltaKontrast_100[rot] = SC1_aktuellerDeltaKontrast_100[rot] / 2;
                SC1_TempKontrast_100[rot] = SC1_aktuellerKontrast_100[rot] + SC1_TempDeltaKontrast_100[rot];
                if (SC1_TempKontrast_100[rot] > 100) return true;
            }

            if ((Light4SightNG.IGChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OGChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC1_TempDeltaKontrast_100[gruen] = SC1_aktuellerDeltaKontrast_100[gruen] / 2;
                SC1_TempKontrast_100[gruen] = SC1_aktuellerKontrast_100[gruen] + SC1_TempDeltaKontrast_100[gruen];
                if (SC1_TempKontrast_100[gruen] > 100) return true;
            }

            if ((Light4SightNG.IBChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OBChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC1_TempDeltaKontrast_100[blau] = SC1_aktuellerDeltaKontrast_100[blau] / 2;
                SC1_TempKontrast_100[blau] = SC1_aktuellerKontrast_100[blau] + SC1_TempDeltaKontrast_100[blau];
                if (SC1_TempKontrast_100[blau] > 100) return true;
            }

            if ((Light4SightNG.ICChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OCChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC1_TempDeltaKontrast_100[cyan] = SC1_aktuellerDeltaKontrast_100[cyan] / 2;
                SC1_TempKontrast_100[cyan] = SC1_aktuellerKontrast_100[cyan] + SC1_TempDeltaKontrast_100[cyan];
                if (SC1_TempKontrast_100[cyan] > 100) return true;
            }

            return false;
        }

        private bool _SC1_checkIfAnyWouldBeSmallerThen0tt(string LED_Gruppe)
        {
            if ((Light4SightNG.IRChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.ORChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC1_TempKontrast_100[rot] = SC1_aktuellerKontrast_100[rot] - SC1_aktuellerDeltaKontrast_100[rot];
                if (SC1_TempKontrast_100[rot] < 0) return true;
            }

            if ((Light4SightNG.IGChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OGChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC1_TempKontrast_100[gruen] = SC1_aktuellerKontrast_100[gruen] - SC1_aktuellerDeltaKontrast_100[gruen];
                if (SC1_TempKontrast_100[gruen] < 0) return true;
            }

            if ((Light4SightNG.IBChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OBChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC1_TempKontrast_100[blau] = SC1_aktuellerKontrast_100[blau] - SC1_aktuellerDeltaKontrast_100[blau];
                if (SC1_TempKontrast_100[blau] < 0) return true;
            }

            if ((Light4SightNG.ICChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OCChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC1_TempKontrast_100[cyan] = SC1_aktuellerKontrast_100[cyan] - SC1_aktuellerDeltaKontrast_100[cyan];
                if (SC1_TempKontrast_100[cyan] < 0) return true;
            }

            return false;
        }

        private bool _SC1_checkIfAnyWouldBeSmallerThen0tf(string LED_Gruppe)
        {
            if ((Light4SightNG.IRChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.ORChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC1_TempDeltaKontrast_100[rot] = SC1_aktuellerDeltaKontrast_100[rot] / 2;
                SC1_TempKontrast_100[rot] = SC1_aktuellerKontrast_100[rot] - SC1_TempDeltaKontrast_100[rot];
                if (SC1_TempKontrast_100[rot] < 0) return true;
            }

            if ((Light4SightNG.IGChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OGChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC1_TempDeltaKontrast_100[gruen] = SC1_aktuellerDeltaKontrast_100[gruen] / 2;
                SC1_TempKontrast_100[gruen] = SC1_aktuellerKontrast_100[gruen] - SC1_TempDeltaKontrast_100[gruen];
                if (SC1_TempKontrast_100[gruen] < 0) return true;
            }

            if ((Light4SightNG.IBChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OBChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC1_TempDeltaKontrast_100[blau] = SC1_aktuellerDeltaKontrast_100[blau] / 2;
                SC1_TempKontrast_100[blau] = SC1_aktuellerKontrast_100[blau] - SC1_TempDeltaKontrast_100[blau];
                if (SC1_TempKontrast_100[blau] < 0) return true;
            }

            if ((Light4SightNG.ICChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OCChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC1_TempDeltaKontrast_100[cyan] = SC1_aktuellerDeltaKontrast_100[cyan] / 2;
                SC1_TempKontrast_100[cyan] = SC1_aktuellerKontrast_100[cyan] - SC1_TempDeltaKontrast_100[cyan];
                if (SC1_TempKontrast_100[cyan] < 0) return true;
            }

            return false;
        }

        private void SetNewKontrastSC2(string LED_Gruppe, bool gesehen, bool davor_gesehen)
        {
            bool bk7 = false;
            string logmessage = "Up: Schwelle erreicht!;;";

            if (LED_Gruppe == "innen")
            #region unterscheidung welche led_gruppe und entsprechnde index zuweisung
            {
                rot = 0;
                gruen = 1;
                blau = 2;
                cyan = 3;
            }
            else
            {
                rot = 4;
                gruen = 5;
                blau = 6;
                cyan = 7;
            }
            #endregion

            if (gesehen == false)
            #region
            {
                if (davor_gesehen == false)
                #region
                {
                    if (!_SC2_checkIfAnyWouldBeLargerThen100ff(LED_Gruppe))
                    #region
                    {
                        if ((Light4SightNG.IRChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.ORChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC2_aktuellerKontrast_100[rot] = SC2_aktuellerKontrast_100[rot] + SC2_aktuellerDeltaKontrast_100[rot];

                            //if (CheckK7("up", rot)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IRChannel.Kontrast_100 = SC2_aktuellerKontrast_100[rot];
                            else
                                Light4SightNG.ORChannel.Kontrast_100 = SC2_aktuellerKontrast_100[rot];
                        }
                        logmessage = logmessage + SC2_aktuellerKontrast_100[rot] + ";";
                        #endregion

                        if ((Light4SightNG.IGChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OGChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC2_aktuellerKontrast_100[gruen] = SC2_aktuellerKontrast_100[gruen] + SC2_aktuellerDeltaKontrast_100[gruen];

                            //if (CheckK7("up", gruen)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IGChannel.Kontrast_100 = SC2_aktuellerKontrast_100[gruen];
                            else
                                Light4SightNG.OGChannel.Kontrast_100 = SC2_aktuellerKontrast_100[gruen];
                        }
                        logmessage = logmessage + SC2_aktuellerKontrast_100[gruen] + ";";
                        #endregion

                        if ((Light4SightNG.IBChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OBChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC2_aktuellerKontrast_100[blau] = SC2_aktuellerKontrast_100[blau] + SC2_aktuellerDeltaKontrast_100[blau];

                            //if (CheckK7("up", blau)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IBChannel.Kontrast_100 = SC2_aktuellerKontrast_100[blau];
                            else
                                Light4SightNG.OBChannel.Kontrast_100 = SC2_aktuellerKontrast_100[blau];
                        }
                        logmessage = logmessage + SC2_aktuellerKontrast_100[blau] + ";";
                        #endregion

                        if ((Light4SightNG.ICChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OCChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC2_aktuellerKontrast_100[cyan] = SC2_aktuellerKontrast_100[cyan] + SC2_aktuellerDeltaKontrast_100[cyan];

                            //if (CheckK7("up", cyan)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.ICChannel.Kontrast_100 = SC2_aktuellerKontrast_100[cyan];
                            else
                                Light4SightNG.OCChannel.Kontrast_100 = SC2_aktuellerKontrast_100[cyan];
                        }
                        logmessage = logmessage + SC2_aktuellerKontrast_100[cyan] + ";";
                        #endregion
                    }
                    #endregion
                    else
                    {
                        //logmessage = SC2_aktuellerKontrast_100[rot] + ";" + SC2_aktuellerKontrast_100[gruen] + ";" + SC2_aktuellerKontrast_100[blau] + ";" + SC2_aktuellerKontrast_100[cyan] + ";";
                        _setCurrentContrastSC2(LED_Gruppe);
                        iSC2K100++;
                        Logmessage("Versuch Überschreitung: " + Convert.ToString(iSC2K100), false);

                    }

                }
                #endregion
                else //davor_gesehen == true
                #region
                {
                    if (!_SC2_checkIfAnyWouldBeLargerThen100ft(LED_Gruppe))
                    #region
                    {
                        //neuen Kontrastwert berechnen
                        if ((Light4SightNG.IRChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.ORChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC2_aktuellerDeltaKontrast_100[rot] = SC2_aktuellerDeltaKontrast_100[rot] / 2;
                            SC2_aktuellerKontrast_100[rot] = SC2_aktuellerKontrast_100[rot] + SC2_aktuellerDeltaKontrast_100[rot];

                            if (CheckK7("up", rot)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IRChannel.Kontrast_100 = SC2_aktuellerKontrast_100[rot];
                            else
                                Light4SightNG.ORChannel.Kontrast_100 = SC2_aktuellerKontrast_100[rot];
                        }
                        logmessage = logmessage + SC2_aktuellerKontrast_100[rot] + ";";
                        #endregion

                        if ((Light4SightNG.IGChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OGChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC2_aktuellerDeltaKontrast_100[gruen] = SC2_aktuellerDeltaKontrast_100[gruen] / 2;
                            SC2_aktuellerKontrast_100[gruen] = SC2_aktuellerKontrast_100[gruen] + SC2_aktuellerDeltaKontrast_100[gruen];

                            if (CheckK7("up", gruen)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IGChannel.Kontrast_100 = SC2_aktuellerKontrast_100[gruen];
                            else
                                Light4SightNG.OGChannel.Kontrast_100 = SC2_aktuellerKontrast_100[gruen];
                        }
                        logmessage = logmessage + SC2_aktuellerKontrast_100[gruen] + ";";
                        #endregion

                        if ((Light4SightNG.IBChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OBChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC2_aktuellerDeltaKontrast_100[blau] = SC2_aktuellerDeltaKontrast_100[blau] / 2;
                            SC2_aktuellerKontrast_100[blau] = SC2_aktuellerKontrast_100[blau] + SC2_aktuellerDeltaKontrast_100[blau];

                            if (CheckK7("up", blau)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IBChannel.Kontrast_100 = SC2_aktuellerKontrast_100[blau];
                            else
                                Light4SightNG.OBChannel.Kontrast_100 = SC2_aktuellerKontrast_100[blau];
                        }
                        logmessage = logmessage + SC2_aktuellerKontrast_100[blau] + ";";
                        #endregion

                        if ((Light4SightNG.ICChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OCChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC2_aktuellerDeltaKontrast_100[cyan] = SC2_aktuellerDeltaKontrast_100[cyan] / 2;
                            SC2_aktuellerKontrast_100[cyan] = SC2_aktuellerKontrast_100[cyan] + SC2_aktuellerDeltaKontrast_100[cyan];

                            if (CheckK7("up", cyan)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.ICChannel.Kontrast_100 = SC2_aktuellerKontrast_100[cyan];
                            else
                                Light4SightNG.OCChannel.Kontrast_100 = SC2_aktuellerKontrast_100[cyan];
                        }
                        logmessage = logmessage + SC2_aktuellerKontrast_100[cyan] + ";";
                        #endregion
                    }
                    #endregion
                    else
                    {
                        //logmessage = SC2_aktuellerKontrast_100[rot] + ";" + SC2_aktuellerKontrast_100[gruen] + ";" + SC2_aktuellerKontrast_100[blau] + ";" + SC2_aktuellerKontrast_100[cyan] + ";";
                        _setCurrentContrastSC2(LED_Gruppe);
                        iSC2K100++;
                        iSC2K0 = 0;
                        Logmessage("Versuch Überschreitung: " + Convert.ToString(iSC2K100), false);

                    }
                }
                #endregion
            }
            #endregion
            else //gesehen == true
            #region
            {
                if (davor_gesehen == true)
                #region
                {
                    if (!_SC2_checkIfAnyWouldBeSmallerThen0tt(LED_Gruppe))
                    #region
                    {
                        if ((Light4SightNG.IRChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.ORChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC2_aktuellerKontrast_100[rot] = SC2_aktuellerKontrast_100[rot] - SC2_aktuellerDeltaKontrast_100[rot];

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IRChannel.Kontrast_100 = SC2_aktuellerKontrast_100[rot];
                            else
                                Light4SightNG.ORChannel.Kontrast_100 = SC2_aktuellerKontrast_100[rot];
                        }
                        #endregion

                        if ((Light4SightNG.IGChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OGChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC2_aktuellerKontrast_100[gruen] = SC2_aktuellerKontrast_100[gruen] - SC2_aktuellerDeltaKontrast_100[gruen];

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IGChannel.Kontrast_100 = SC2_aktuellerKontrast_100[gruen];
                            else
                                Light4SightNG.OGChannel.Kontrast_100 = SC2_aktuellerKontrast_100[gruen];
                        }
                        #endregion

                        if ((Light4SightNG.IBChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OBChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC2_aktuellerKontrast_100[blau] = SC2_aktuellerKontrast_100[blau] - SC2_aktuellerDeltaKontrast_100[blau];

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IBChannel.Kontrast_100 = SC2_aktuellerKontrast_100[blau];
                            else
                                Light4SightNG.OBChannel.Kontrast_100 = SC2_aktuellerKontrast_100[blau];
                        }
                        #endregion

                        if ((Light4SightNG.ICChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OCChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC2_aktuellerKontrast_100[cyan] = SC2_aktuellerKontrast_100[cyan] - SC2_aktuellerDeltaKontrast_100[cyan];

                            if (LED_Gruppe == "innen")
                                Light4SightNG.ICChannel.Kontrast_100 = SC2_aktuellerKontrast_100[cyan];
                            else
                                Light4SightNG.OCChannel.Kontrast_100 = SC2_aktuellerKontrast_100[cyan];
                        }
                        #endregion
                    }
                    #endregion
                    else
                    {
                        //logmessage = SC2_aktuellerKontrast_100[rot] + ";" + SC2_aktuellerKontrast_100[gruen] + ";" + SC2_aktuellerKontrast_100[blau] + ";" + SC2_aktuellerKontrast_100[cyan] + ";";
                        _setCurrentContrastSC2(LED_Gruppe);
                        iSC2K0++;
                        Logmessage("Versuch Unterschreitung: "+Convert.ToString(iSC2K0), false);
                    }
                }
                #endregion
                else //davor_gesehen == false
                #region
                {
                    if (!_SC2_checkIfAnyWouldBeSmallerThen0tf(LED_Gruppe))
                    #region
                    {
                        if ((Light4SightNG.IRChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.ORChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC2_aktuellerDeltaKontrast_100[rot] = SC2_aktuellerDeltaKontrast_100[rot] / 2;
                            SC2_aktuellerKontrast_100[rot] = SC2_aktuellerKontrast_100[rot] - SC2_aktuellerDeltaKontrast_100[rot];

                            if (CheckK7("up", rot)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IRChannel.Kontrast_100 = SC2_aktuellerKontrast_100[rot];
                            else
                                Light4SightNG.ORChannel.Kontrast_100 = SC2_aktuellerKontrast_100[rot];
                        }
                        logmessage = logmessage + SC2_aktuellerKontrast_100[rot] + ";";
                        #endregion

                        if ((Light4SightNG.IGChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OGChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC2_aktuellerDeltaKontrast_100[gruen] = SC2_aktuellerDeltaKontrast_100[gruen] / 2;
                            SC2_aktuellerKontrast_100[gruen] = SC2_aktuellerKontrast_100[gruen] - SC2_aktuellerDeltaKontrast_100[gruen];

                            if (CheckK7("up", gruen)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IGChannel.Kontrast_100 = SC2_aktuellerKontrast_100[gruen];
                            else
                                Light4SightNG.OGChannel.Kontrast_100 = SC2_aktuellerKontrast_100[gruen];
                        }
                        logmessage = logmessage + SC2_aktuellerKontrast_100[gruen] + ";";
                        #endregion

                        if ((Light4SightNG.IBChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OBChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC2_aktuellerDeltaKontrast_100[blau] = SC2_aktuellerDeltaKontrast_100[blau] / 2;
                            SC2_aktuellerKontrast_100[blau] = SC2_aktuellerKontrast_100[blau] - SC2_aktuellerDeltaKontrast_100[blau];

                            if (CheckK7("up", blau)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.IBChannel.Kontrast_100 = SC2_aktuellerKontrast_100[blau];
                            else
                                Light4SightNG.OBChannel.Kontrast_100 = SC2_aktuellerKontrast_100[blau];
                        }
                        logmessage = logmessage + SC2_aktuellerKontrast_100[blau] + ";";
                        #endregion

                        if ((Light4SightNG.ICChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OCChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
                        #region
                        {
                            SC2_aktuellerDeltaKontrast_100[cyan] = SC2_aktuellerDeltaKontrast_100[cyan] / 2;
                            SC2_aktuellerKontrast_100[cyan] = SC2_aktuellerKontrast_100[cyan] - SC2_aktuellerDeltaKontrast_100[cyan];

                            if (CheckK7("up", cyan)) bk7 = true;

                            if (LED_Gruppe == "innen")
                                Light4SightNG.ICChannel.Kontrast_100 = SC2_aktuellerKontrast_100[cyan];
                            else
                                Light4SightNG.OCChannel.Kontrast_100 = SC2_aktuellerKontrast_100[cyan];
                        }
                        logmessage = logmessage + SC2_aktuellerKontrast_100[cyan] + ";";
                        #endregion
                    }
                    #endregion
                    else
                    {
                        //logmessage = SC2_aktuellerKontrast_100[rot] + ";" + SC2_aktuellerKontrast_100[gruen] + ";" + SC2_aktuellerKontrast_100[blau] + ";" + SC2_aktuellerKontrast_100[cyan] + ";";
                        _setCurrentContrastSC2(LED_Gruppe);
                        iSC2K0++;
                        Logmessage("Versuch Unterschreitung: " + Convert.ToString(iSC2K0), false);
                        iSC2K100 = 0;
                    }
                }
                #endregion
            }
            #endregion
            if (bk7) Logmessage(logmessage, false);
            //if (SC1_7 == true && SC2_7 == true)
            //{
            //    this.OnAbbruch(new AbbruchEventArgs(""));
            //}
        }

        private bool _SC2_checkIfAnyWouldBeLargerThen100ff(string LED_Gruppe)
        {
            if ((Light4SightNG.IRChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.ORChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC2_TempKontrast_100[rot] = SC2_aktuellerKontrast_100[rot] + SC2_aktuellerDeltaKontrast_100[rot];
                if (SC2_TempKontrast_100[rot] > 100) return true;
            }

            if ((Light4SightNG.IGChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OGChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC2_TempKontrast_100[gruen] = SC2_aktuellerKontrast_100[gruen] + SC2_aktuellerDeltaKontrast_100[gruen];
                if (SC2_TempKontrast_100[gruen] > 100) return true;
            }

            if ((Light4SightNG.IBChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OBChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC2_TempKontrast_100[blau] = SC2_aktuellerKontrast_100[blau] + SC2_aktuellerDeltaKontrast_100[blau];
                if (SC2_TempKontrast_100[blau] > 100) return true;
            }

            if ((Light4SightNG.ICChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OCChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC2_TempKontrast_100[cyan] = SC2_aktuellerKontrast_100[cyan] + SC2_aktuellerDeltaKontrast_100[cyan];
                if (SC2_TempKontrast_100[cyan] > 100) return true;
            }

            return false;
        }

        private bool _SC2_checkIfAnyWouldBeLargerThen100ft(string LED_Gruppe)
        {
            if ((Light4SightNG.IRChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.ORChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC2_TempDeltaKontrast_100[rot] = SC2_aktuellerDeltaKontrast_100[rot] / 2;
                SC2_TempKontrast_100[rot] = SC2_aktuellerKontrast_100[rot] + SC2_TempDeltaKontrast_100[rot];
                if (SC2_TempKontrast_100[rot] > 100) return true;
            }

            if ((Light4SightNG.IGChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OGChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC2_TempDeltaKontrast_100[gruen] = SC2_aktuellerDeltaKontrast_100[gruen] / 2;
                SC2_TempKontrast_100[gruen] = SC2_aktuellerKontrast_100[gruen] + SC2_TempDeltaKontrast_100[gruen];
                if (SC2_TempKontrast_100[gruen] > 100) return true;
            }

            if ((Light4SightNG.IBChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OBChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC2_TempDeltaKontrast_100[blau] = SC2_aktuellerDeltaKontrast_100[blau] / 2;
                SC2_TempKontrast_100[blau] = SC2_aktuellerKontrast_100[blau] + SC2_TempDeltaKontrast_100[blau];
                if (SC2_TempKontrast_100[blau] > 100) return true;
            }

            if ((Light4SightNG.ICChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OCChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC2_TempDeltaKontrast_100[cyan] = SC2_aktuellerDeltaKontrast_100[cyan] / 2;
                SC2_TempKontrast_100[cyan] = SC2_aktuellerKontrast_100[cyan] + SC2_TempDeltaKontrast_100[cyan];
                if (SC2_TempKontrast_100[cyan] > 100) return true;
            }

            return false;
        }

        private bool _SC2_checkIfAnyWouldBeSmallerThen0tt(string LED_Gruppe)
        {
            if ((Light4SightNG.IRChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.ORChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC2_TempKontrast_100[rot] = SC2_aktuellerKontrast_100[rot] - SC2_aktuellerDeltaKontrast_100[rot];
                if (SC2_TempKontrast_100[rot] < 0) return true;
            }

            if ((Light4SightNG.IGChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OGChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC2_TempKontrast_100[gruen] = SC2_aktuellerKontrast_100[gruen] - SC2_aktuellerDeltaKontrast_100[gruen];
                if (SC2_TempKontrast_100[gruen] < 0) return true;
            }

            if ((Light4SightNG.IBChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OBChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC2_TempKontrast_100[blau] = SC2_aktuellerKontrast_100[blau] - SC2_aktuellerDeltaKontrast_100[blau];
                if (SC2_TempKontrast_100[blau] < 0) return true;
            }

            if ((Light4SightNG.ICChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OCChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC2_TempKontrast_100[cyan] = SC2_aktuellerKontrast_100[cyan] - SC2_aktuellerDeltaKontrast_100[cyan];
                if (SC2_TempKontrast_100[cyan] < 0) return true;
            }

            return false;
        }

        private bool _SC2_checkIfAnyWouldBeSmallerThen0tf(string LED_Gruppe)
        {
            if ((Light4SightNG.IRChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.ORChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC2_TempDeltaKontrast_100[rot] = SC2_aktuellerDeltaKontrast_100[rot] / 2;
                SC2_TempKontrast_100[rot] = SC2_aktuellerKontrast_100[rot] - SC2_TempDeltaKontrast_100[rot];
                if (SC2_TempKontrast_100[rot] < 0) return true;
            }

            if ((Light4SightNG.IGChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OGChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC2_TempDeltaKontrast_100[gruen] = SC2_aktuellerDeltaKontrast_100[gruen] / 2;
                SC2_TempKontrast_100[gruen] = SC2_aktuellerKontrast_100[gruen] - SC2_TempDeltaKontrast_100[gruen];
                if (SC2_TempKontrast_100[gruen] < 0) return true;
            }

            if ((Light4SightNG.IBChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OBChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC2_TempDeltaKontrast_100[blau] = SC2_aktuellerDeltaKontrast_100[blau] / 2;
                SC2_TempKontrast_100[blau] = SC2_aktuellerKontrast_100[blau] - SC2_TempDeltaKontrast_100[blau];
                if (SC2_TempKontrast_100[blau] < 0) return true;
            }

            if ((Light4SightNG.ICChannel.SignalAktiv == true && LED_Gruppe == "innen") || (Light4SightNG.OCChannel.SignalAktiv == true && LED_Gruppe == "aussen"))
            {
                SC2_TempDeltaKontrast_100[cyan] = SC2_aktuellerDeltaKontrast_100[cyan] / 2;
                SC2_TempKontrast_100[cyan] = SC2_aktuellerKontrast_100[cyan] - SC2_TempDeltaKontrast_100[cyan];
                if (SC2_TempKontrast_100[cyan] < 0) return true;
            }

            return false;
        }

        private bool CheckK7(string Staircase, int channel)
        {
            if (Staircase == "down")
            {
                if (SC1_aktuellerDeltaKontrast_100[channel] < (SC1_aktuellerKontrast_100[channel] / 7))
                {
                    //Logmessage("Down: Schwelle erreicht!;;" + SC1_aktuellerKontrast_100[0] + ";" + SC1_aktuellerKontrast_100[1] + ";" + SC1_aktuellerKontrast_100[2] + ";" + SC1_aktuellerKontrast_100[3] + ";" + SC1_aktuellerKontrast_100[4] + ";" + SC1_aktuellerKontrast_100[5] + ";" + SC1_aktuellerKontrast_100[6] + ";" + SC1_aktuellerKontrast_100[7],false);
                    
                    SC1_7 = true;
                   /* if (SC2_7 == true)
                        this.OnAbbruch(new AbbruchEventArgs(""));*/
                    //**_**  nur abbrechen, wenn anderer sc auch schon beendet
                    return true;
                }
            }
            else
            {
                if (SC2_aktuellerDeltaKontrast_100[channel] < (SC2_aktuellerKontrast_100[channel] / 7))
                {
                    //Logmessage("Up: Schwelle erreicht!;;" + SC2_aktuellerKontrast_100[0] + ";" + SC2_aktuellerKontrast_100[1] + ";" + SC2_aktuellerKontrast_100[2] + ";" + SC2_aktuellerKontrast_100[3] + ";" + SC2_aktuellerKontrast_100[4] + ";" + SC2_aktuellerKontrast_100[5] + ";" + SC2_aktuellerKontrast_100[6] + ";" + SC2_aktuellerKontrast_100[7], false);
                    SC2_7 = true;
                    /*if (SC1_7 == true)
                        this.OnAbbruch(new AbbruchEventArgs(""));*/
                    //**_** 
                    return true;

                }
            }
            return false;
        }

        private void SignalWiedergeben()
        {
            AudioControl.InitWaveContainer();
            clSignalGeneration.CreateChannelArrays();
            clSignalGeneration.Untersuchungssignal();
            AudioControl.PlaySignal();
        }

        virtual public void SignalStoppen()
        {
            AudioControl.StopSignal();
            Thread.Sleep(100);
            clSignalGeneration.ClearChannelArrays();
            Thread.Sleep(100);
        }

        virtual public void gesehen_KeyDown(KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Y)
            {
                SignalStoppen();
                Thread.Sleep(10);
                if (SC1_aktiv == true)
                {
                    SC1_gesehen = true;
                    Logmessage("Down:;gesehen;" + Light4SightNG.IRChannel.Kontrast_100 + ";" + Light4SightNG.IGChannel.Kontrast_100 + ";" + Light4SightNG.IBChannel.Kontrast_100 + ";" + Light4SightNG.ICChannel.Kontrast_100 + ";;" + Light4SightNG.ORChannel.Kontrast_100 + ";" + Light4SightNG.OGChannel.Kontrast_100 + ";" + Light4SightNG.OBChannel.Kontrast_100 + ";" + Light4SightNG.OCChannel.Kontrast_100, false);
                }
                else
                {
                    SC2_gesehen = true;
                    Logmessage("Up:;gesehen;" + Light4SightNG.IRChannel.Kontrast_100 + ";" + Light4SightNG.IGChannel.Kontrast_100 + ";" + Light4SightNG.IBChannel.Kontrast_100 + ";" + Light4SightNG.ICChannel.Kontrast_100 + ";;" + Light4SightNG.ORChannel.Kontrast_100 + ";" + Light4SightNG.OGChannel.Kontrast_100 + ";" + Light4SightNG.OBChannel.Kontrast_100 + ";" + Light4SightNG.OCChannel.Kontrast_100, false);
                }
                Randomisierung();
            }
        }

        virtual public void nichtgesehen_KeyDown(KeyEventArgs e)
        {
            if (e.KeyCode == Keys.M)
            {
                Thread.Sleep(10);
                SignalStoppen();
                if (SC1_aktiv == true)
                {
                    SC1_gesehen = false;
                    Logmessage("Down:;nicht gesehen;" + Light4SightNG.IRChannel.Kontrast_100 + ";" + Light4SightNG.IGChannel.Kontrast_100 + ";" + Light4SightNG.IBChannel.Kontrast_100 + ";" + Light4SightNG.ICChannel.Kontrast_100 + ";;" + Light4SightNG.ORChannel.Kontrast_100 + ";" + Light4SightNG.OGChannel.Kontrast_100 + ";" + Light4SightNG.OBChannel.Kontrast_100 + ";" + Light4SightNG.OCChannel.Kontrast_100, false);
                }
                else
                {
                    SC2_gesehen = false;
                    Logmessage("Up:;nicht gesehen;" + Light4SightNG.IRChannel.Kontrast_100 + ";" + Light4SightNG.IGChannel.Kontrast_100 + ";" + Light4SightNG.IBChannel.Kontrast_100 + ";" + Light4SightNG.ICChannel.Kontrast_100 + ";;" + Light4SightNG.ORChannel.Kontrast_100 + ";" + Light4SightNG.OGChannel.Kontrast_100 + ";" + Light4SightNG.OBChannel.Kontrast_100 + ";" + Light4SightNG.OCChannel.Kontrast_100, false);
                }
                Randomisierung();
            }
        }

        private void prepareLogFile()
        {
            string line2, line3, line4, line5, line6, line7, line8, line9, line10;
            Logmessage(";;Centerfield;;;;;Surroundfield;;",true);
            Logmessage(";;R;G;B;C;;R;G;B;C;",true);

            if (Light4SightNG.IRChannel.SignalAktiv == true)
            {
                line2 = ("Signal aktiv;;" + Light4SightNG.IRChannel.SignalAktiv.ToString() + ";");
                line3 = ("Signalform;;" + Light4SightNG.IRChannel.Signalform + ";");
                line4 = ("Helligkeit;;" + Light4SightNG.IRChannel.MittlereHelligkeit_cdm2.ToString() + ";");
                line5 = ("Frequenz;;" + Light4SightNG.IRChannel.Frequenz.ToString() + ";");
                line6 = ("Phase;;" + Light4SightNG.IRChannel.Phasenverschiebung.ToString() + ";");
                line7 = ("Kontrast SC1;;" + Light4SightNG.IRChannel.KonSC1_100.ToString() + ";");
                line8 = ("Kontrast SC2;;" + Light4SightNG.IRChannel.KonSC2_100.ToString() + ";");
                line9 = ("Delta Kontrast SC1;;" + Light4SightNG.IRChannel.SC1DeltaK_100.ToString() + ";");
                line10 = ("Delta Kontrast SC2;;" + Light4SightNG.IRChannel.SC2DeltaK_100.ToString() + ";");
            }
            else
            {
                line2 = ("Signal aktiv;;");
                line3 = ("Signalform;;;");
                line4 = ("Helligkeit;;;");
                line5 = ("Frequenz;;;");
                line6 = ("Phase;;;");
                line7 = ("Kontrast SC1;;;");
                line8 = ("Kontrast SC2;;;");
                line9 = ("Delta Kontrast SC1;;;");
                line10 = ("Delta Kontrast SC2;;;");
            }
              
            if (Light4SightNG.IGChannel.SignalAktiv == true)
            {
                line2 = (line2 + Light4SightNG.IGChannel.SignalAktiv.ToString() + ";");
                line3 = (line3 + Light4SightNG.IGChannel.Signalform + ";");
                line4 = (line4 + Light4SightNG.IGChannel.MittlereHelligkeit_cdm2.ToString() + ";");
                line5 = (line5 + Light4SightNG.IGChannel.Frequenz.ToString() + ";");
                line6 = (line6 + Light4SightNG.IGChannel.Phasenverschiebung.ToString() + ";");
                line7 = (line7 + Light4SightNG.IGChannel.KonSC1_100.ToString() + ";");
                line8 = (line8 + Light4SightNG.IGChannel.KonSC2_100.ToString() + ";");
                line9 = (line9 + Light4SightNG.IGChannel.SC1DeltaK_100.ToString() + ";");
                line10 = (line10 + Light4SightNG.IGChannel.SC2DeltaK_100.ToString() + ";");
            }
            else
            {
                line2 = (line2 + ";");
                line3 = (line3 + ";");
                line4 = (line4 + ";");
                line5 = (line5 + ";");
                line6 = (line6 + ";");
                line7 = (line7 + ";");
                line8 = (line8 + ";");
                line9 = (line9 + ";");
                line10 = (line10 + ";");
            }


            if (Light4SightNG.IBChannel.SignalAktiv == true)
            {
                line2 = (line2 + Light4SightNG.IBChannel.SignalAktiv.ToString() + ";");
                line3 = (line3 + Light4SightNG.IBChannel.Signalform + ";");
                line4 = (line4 + Light4SightNG.IBChannel.MittlereHelligkeit_cdm2.ToString() + ";");
                line5 = (line5 + Light4SightNG.IBChannel.Frequenz.ToString() + ";");
                line6 = (line6 + Light4SightNG.IBChannel.Phasenverschiebung.ToString() + ";");
                line7 = (line7 + Light4SightNG.IBChannel.KonSC1_100.ToString() + ";");
                line8 = (line8 + Light4SightNG.IBChannel.KonSC2_100.ToString() + ";");
                line9 = (line9 + Light4SightNG.IBChannel.SC1DeltaK_100.ToString() + ";");
                line10 = (line10 + Light4SightNG.IBChannel.SC2DeltaK_100.ToString() + ";");
            }
            else
            {
                line2 = (line2 + ";");
                line3 = (line3 + ";");
                line4 = (line4 + ";");
                line5 = (line5 + ";");
                line6 = (line6 + ";");
                line7 = (line7 + ";");
                line8 = (line8 + ";");
                line9 = (line9 + ";");
                line10 = (line10 + ";");
            }

            if (Light4SightNG.ICChannel.SignalAktiv == true)
            {
                line2 = (line2 + Light4SightNG.ICChannel.SignalAktiv.ToString() + ";;");
                line3 = (line3 + Light4SightNG.ICChannel.Signalform + ";;");
                line4 = (line4 + Light4SightNG.ICChannel.MittlereHelligkeit_cdm2.ToString() + ";;");
                line5 = (line5 + Light4SightNG.ICChannel.Frequenz.ToString() + ";;");
                line6 = (line6 + Light4SightNG.ICChannel.Phasenverschiebung.ToString() + ";;");
                line7 = (line7 + Light4SightNG.ICChannel.KonSC1_100.ToString() + ";;");
                line8 = (line8 + Light4SightNG.ICChannel.KonSC2_100.ToString() + ";;");
                line9 = (line9 + Light4SightNG.ICChannel.SC1DeltaK_100.ToString() + ";;");
                line10 = (line10 + Light4SightNG.ICChannel.SC2DeltaK_100.ToString() + ";;");
            }
            else
            {
                line2 = (line2 + ";;;");
                line3 = (line3 + ";;;");
                line4 = (line4 + ";;;");
                line5 = (line5 + ";;;");
                line6 = (line6 + ";;;");
                line7 = (line7 + ";;;");
                line8 = (line8 + ";;;");
                line9 = (line9 + ";;;");
                line10 = (line10 + ";;;");
            }

            if (Light4SightNG.ORChannel.SignalAktiv == true)
            {
                line2 = (line2 + Light4SightNG.ORChannel.SignalAktiv.ToString() + ";");
                line3 = (line3 + Light4SightNG.ORChannel.Signalform + ";");
                line4 = (line4 + Light4SightNG.ORChannel.MittlereHelligkeit_cdm2.ToString() + ";");
                line5 = (line5 + Light4SightNG.ORChannel.Frequenz.ToString() + ";");
                line6 = (line6 + Light4SightNG.ORChannel.Phasenverschiebung.ToString() + ";");
                line7 = (line7 + Light4SightNG.ORChannel.KonSC1_100.ToString() + ";");
                line8 = (line8 + Light4SightNG.ORChannel.KonSC2_100.ToString() + ";");
                line9 = (line9 + Light4SightNG.ORChannel.SC1DeltaK_100.ToString() + ";");
                line10 = (line10 + Light4SightNG.ORChannel.SC2DeltaK_100.ToString() + ";");
            }
            else
            {
                line2 = (line2 + ";");
                line3 = (line3 + ";");
                line4 = (line4 + ";");
                line5 = (line5 + ";");
                line6 = (line6 + ";");
                line7 = (line7 + ";");
                line8 = (line8 + ";");
                line9 = (line9 + ";");
                line10 = (line10 + ";");
            }
              
            if (Light4SightNG.OGChannel.SignalAktiv == true)
            {
                line2 = (line2 + Light4SightNG.OGChannel.SignalAktiv.ToString() + ";");
                line3 = (line3 + Light4SightNG.OGChannel.Signalform + ";");
                line4 = (line4 + Light4SightNG.OGChannel.MittlereHelligkeit_cdm2.ToString() + ";");
                line5 = (line5 + Light4SightNG.OGChannel.Frequenz.ToString() + ";");
                line6 = (line6 + Light4SightNG.OGChannel.Phasenverschiebung.ToString() + ";");
                line7 = (line7 + Light4SightNG.OGChannel.KonSC1_100.ToString() + ";");
                line8 = (line8 + Light4SightNG.OGChannel.KonSC2_100.ToString() + ";");
                line9 = (line9 + Light4SightNG.OGChannel.SC1DeltaK_100.ToString() + ";");
                line10 = (line10 + Light4SightNG.OGChannel.SC2DeltaK_100.ToString() + ";");
            }
            else
            {
                line2 = (line2 + ";");
                line3 = (line3 + ";");
                line4 = (line4 + ";");
                line5 = (line5 + ";");
                line6 = (line6 + ";");
                line7 = (line7 + ";");
                line8 = (line8 + ";");
                line9 = (line9 + ";");
                line10 = (line10 + ";");
            }

            if (Light4SightNG.OBChannel.SignalAktiv == true)
            {
                line2 = (line2 + Light4SightNG.OBChannel.SignalAktiv.ToString() + ";");
                line3 = (line3 + Light4SightNG.OBChannel.Signalform + ";");
                line4 = (line4 + Light4SightNG.OBChannel.MittlereHelligkeit_cdm2.ToString() + ";");
                line5 = (line5 + Light4SightNG.OBChannel.Frequenz.ToString() + ";");
                line6 = (line6 + Light4SightNG.OBChannel.Phasenverschiebung.ToString() + ";");
                line7 = (line7 + Light4SightNG.OBChannel.KonSC1_100.ToString() + ";");
                line8 = (line8 + Light4SightNG.OBChannel.KonSC2_100.ToString() + ";");
                line9 = (line9 + Light4SightNG.OBChannel.SC1DeltaK_100.ToString() + ";");
                line10 = (line10 + Light4SightNG.OBChannel.SC2DeltaK_100.ToString() + ";");
            }
            else
            {
                line2 = (line2 + ";");
                line3 = (line3 + ";");
                line4 = (line4 + ";");
                line5 = (line5 + ";");
                line6 = (line6 + ";");
                line7 = (line7 + ";");
                line8 = (line8 + ";");
                line9 = (line9 + ";");
                line10 = (line10 + ";");
            }

            if (Light4SightNG.OCChannel.SignalAktiv == true)
            {
                line2 = (line2 + Light4SightNG.OCChannel.SignalAktiv.ToString() + ";");
                line3 = (line3 + Light4SightNG.OCChannel.Signalform + ";");
                line4 = (line4 + Light4SightNG.OCChannel.MittlereHelligkeit_cdm2.ToString() + ";");
                line5 = (line5 + Light4SightNG.OCChannel.Frequenz.ToString() + ";");
                line6 = (line6 + Light4SightNG.OCChannel.Phasenverschiebung.ToString() + ";");
                line7 = (line7 + Light4SightNG.OCChannel.KonSC1_100.ToString() + ";");
                line8 = (line8 + Light4SightNG.OCChannel.KonSC2_100.ToString() + ";");
                line9 = (line9 + Light4SightNG.OCChannel.SC1DeltaK_100.ToString() + ";");
                line10 = (line10 + Light4SightNG.OCChannel.SC2DeltaK_100.ToString() + ";");
            }
            else
            {
                line2 = (line2 + ";");
                line3 = (line3 + ";");
                line4 = (line4 + ";");
                line5 = (line5 + ";");
                line6 = (line6 + ";");
                line7 = (line7 + ";");
                line8 = (line8 + ";");
                line9 = (line9 + ";");
                line10 = (line10 + ";");
            }

            Logmessage(line2, true);
            Logmessage(line3,true);
            Logmessage(line4,true);
            Logmessage(line5, true);
            Logmessage(line6, true);
            Logmessage(line7, true);
            Logmessage(line8, true);
            Logmessage(line9, true);
            Logmessage(line10, true);
            Logmessage("", true);
        }

        private void Logmessage(string text, bool header)
        {
            foreach (Form frm in Application.OpenForms)
            {
                if (frm is Light4SightNG)
                {
                    (frm as Light4SightNG).LogFile(text, header);
                }
            }
        }

        private void Randomisierung()
        {
            if (SC1_7 && SC2_7)
            {
                this.OnAbbruch(new AbbruchEventArgs(""));
            }

            if (clGlobals.Staircase == "up" && !SC2_7)
            {
                StaircaseUp();
                SC1_aktiv = false;
            }

            if (clGlobals.Staircase == "down" && !SC1_7)
            {
                StaircaseDown();
                SC1_aktiv = true;
            }

            if (clGlobals.Staircase == "beide")
            {
                //if (SC1_7 && SC2_7)
                //{
                //    this.OnAbbruch(new AbbruchEventArgs(""));
                //}

                double tmpRand = dRand.NextDouble();

                if ((tmpRand >= 0.5 || SC2_7) && !SC1_7)
                {
                    SC1_aktiv = true;
                    StaircaseDown();//sc1
                }
                else if ((tmpRand < 0.5 || SC1_7) && !SC2_7)
                {
                    SC1_aktiv = false;
                    StaircaseUp();//sc2
                }
            }
        }

    }
}
